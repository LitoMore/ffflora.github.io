<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Flora&#39;s</title>
    <link>https://ffflora.github.io/tags/react/</link>
    <description>Recent content in React on Flora&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jan 2020 00:50:02 -0800</lastBuildDate>
    
	<atom:link href="https://ffflora.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React(1): Basics of React</title>
      <link>https://ffflora.github.io/posts/react-note1/</link>
      <pubDate>Tue, 28 Jan 2020 00:50:02 -0800</pubDate>
      
      <guid>https://ffflora.github.io/posts/react-note1/</guid>
      <description>Basics of React (Most of the materials come from React Official Document) JSX Represents Objects Babel compiles JSX down to React.createElement() calls.
These two examples are identical:
const element = ( &amp;lt;h1 className=&amp;#34;greeting&amp;#34;&amp;gt; Hello, world! &amp;lt;/h1&amp;gt; ); const element = React.createElement( &amp;#39;h1&amp;#39;, {className: &amp;#39;greeting&amp;#39;}, &amp;#39;Hello, world!&amp;#39; ); React.createElement() performs a few checks to help you write bug-free code but essentially it creates an object like this:
// Note: this structure is simplified const element = { type: &amp;#39;h1&amp;#39;, props: { className: &amp;#39;greeting&amp;#39;, children: &amp;#39;Hello, world!</description>
    </item>
    
  </channel>
</rss>